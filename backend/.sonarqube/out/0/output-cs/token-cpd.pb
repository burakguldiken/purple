≈[
dC:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\Contexts\Dapper\DbContext.cs
	namespace 	
Core
 
. 
Contexts 
. 
Dapper 
{ 
public 

class 
	DbContext 
< 
T 
> 
: 

IDbContext  *
<* +
T+ ,
>, -
where. 3
T4 5
:6 7

BaseEntity8 B
,B C
newD G
(G H
)H I
{ 
readonly 
IDbTransaction 
_transaction  ,
;, -
	protected 
IDbConnection 
_connection  +
{ 	
get 
{ 
return 
_transaction #
.# $

Connection$ .
;. /
} 
} 	
public 
	DbContext 
( 
IDbTransaction '
transaction( 3
)3 4
{ 	
_transaction 
= 
transaction &
;& '
}   	
public"" 
IEnumerable"" 
<"" 
T"" 
>"" 
GetAll"" $
(""$ %
)""% &
{## 	
try$$ 
{%% 
return&& 
_connection&& "
.&&" #
GetAll&&# )
<&&) *
T&&* +
>&&+ ,
(&&, -
)&&- .
.&&. /
Where&&/ 4
(&&4 5
x&&5 6
=>&&7 9
x&&: ;
.&&; <
StatusId&&< D
==&&E G
(&&H I
int&&I L
)&&L M

EnumStatus&&M W
.&&W X
Active&&X ^
)&&^ _
.&&_ `
ToList&&` f
(&&f g
)&&g h
;&&h i
}'' 
catch(( 
((( 
	Exception(( 
ex(( 
)((  
{)) 
Console** 
.** 
	WriteLine** !
(**! "
ex**" $
.**$ %
Message**% ,
)**, -
;**- .
}++ 
return,, 
default,, 
;,, 
}-- 	
public// 
T// 
GetById// 
(// 
long// 
id//  
)//  !
{00 	
try11 
{22 
return33 
_connection33 "
.33" #
Get33# &
<33& '
T33' (
>33( )
(33) *
id33* ,
)33, -
;33- .
}44 
catch55 
(55 
	Exception55 
ex55 
)55  
{66 
Console77 
.77 
	WriteLine77 !
(77! "
ex77" $
.77$ %
Message77% ,
)77, -
;77- .
}88 
return99 
default99 
;99 
}:: 	
public<< 
bool<< 
Update<< 
(<< 
T<< 
item<< !
)<<! "
{== 	
try>> 
{?? 
return@@ 
_connection@@ "
.@@" #
Update@@# )
(@@) *
item@@* .
,@@. /
_transaction@@0 <
)@@< =
;@@= >
}AA 
catchBB 
(BB 
	ExceptionBB 
exBB 
)BB  
{CC 
ConsoleDD 
.DD 
	WriteLineDD !
(DD! "
exDD" $
.DD$ %
MessageDD% ,
)DD, -
;DD- .
}EE 
returnFF 
defaultFF 
;FF 
}GG 	
publicII 
boolII 
DeleteII 
(II 
TII 
itemII !
)II! "
{JJ 	
tryKK 
{LL 
itemMM 
.MM 
StatusIdMM 
=MM 
(MM  !
intMM! $
)MM$ %

EnumStatusMM% /
.MM/ 0
InactiveMM0 8
;MM8 9
returnNN 
_connectionNN "
.NN" #
UpdateNN# )
(NN) *
itemNN* .
,NN. /
_transactionNN0 <
)NN< =
;NN= >
}OO 
catchPP 
(PP 
	ExceptionPP 
exPP 
)PP  
{QQ 
ConsoleRR 
.RR 
	WriteLineRR !
(RR! "
exRR" $
.RR$ %
MessageRR% ,
)RR, -
;RR- .
}SS 
returnTT 
defaultTT 
;TT 
}UU 	
publicXX 
longXX 
InsertXX 
(XX 
TXX 
itemXX !
)XX! "
{YY 	
tryZZ 
{[[ 
return\\ 
_connection\\ "
.\\" #
Insert\\# )
(\\) *
item\\* .
,\\. /
_transaction\\0 <
)\\< =
;\\= >
}]] 
catch^^ 
(^^ 
	Exception^^ 
ex^^ 
)^^  
{__ 
Console`` 
.`` 
	WriteLine`` !
(``! "
ex``" $
.``$ %
Message``% ,
)``, -
;``- .
}aa 
returnbb 
defaultbb 
;bb 
}cc 	
publicee 
IEnumerableee 
<ee 
Tee 
>ee 
ExecuteCommandee ,
(ee, -
stringee- 3
sqlee4 7
,ee7 8
paramsee9 ?
objectee@ F
[eeF G
]eeG H
argseeI M
)eeM N
{ff 	
trygg 
{hh 
returnii 
_connectionii "
.ii" #
Queryii# (
<ii( )
Tii) *
>ii* +
(ii+ ,
sqlii, /
,ii/ 0
CreateParamsii1 =
(ii= >
GetMethodNameii> K
(iiK L
)iiL M
,iiM N
argsiiO S
)iiS T
)iiT U
;iiU V
}jj 
catchkk 
(kk 
	Exceptionkk 
exkk 
)kk  
{ll 
Consolemm 
.mm 
	WriteLinemm !
(mm! "
exmm" $
.mm$ %
Messagemm% ,
)mm, -
;mm- .
}nn 
returnoo 
defaultoo 
;oo 
}pp 	
publicrr 
IEnumerablerr 
<rr 
Trr 
>rr 
ExecuteCommandrr ,
(rr, -
stringrr- 3
sqlrr4 7
)rr7 8
{ss 	
trytt 
{uu 
returnvv 
_connectionvv "
.vv" #
Queryvv# (
<vv( )
Tvv) *
>vv* +
(vv+ ,
sqlvv, /
)vv/ 0
;vv0 1
}ww 
catchxx 
(xx 
	Exceptionxx 
exxx 
)xx  
{yy 
Consolezz 
.zz 
	WriteLinezz !
(zz! "
exzz" $
.zz$ %
Messagezz% ,
)zz, -
;zz- .
}{{ 
return|| 
default|| 
;|| 
}}} 	
public 
bool 

BulkInsert 
( 
IEnumerable *
<* +
T+ ,
>, -
items. 3
)3 4
{
ÄÄ 	
try
ÅÅ 
{
ÇÇ 
return
ÉÉ 
_connection
ÉÉ "
.
ÉÉ" #

BulkInsert
ÉÉ# -
(
ÉÉ- .
items
ÉÉ. 3
)
ÉÉ3 4
.
ÉÉ4 5
Current
ÉÉ5 <
.
ÉÉ< =
Any
ÉÉ= @
(
ÉÉ@ A
)
ÉÉA B
;
ÉÉB C
}
ÑÑ 
catch
ÖÖ 
(
ÖÖ 
	Exception
ÖÖ 
ex
ÖÖ 
)
ÖÖ  
{
ÜÜ 
Console
áá 
.
áá 
	WriteLine
áá !
(
áá! "
ex
áá" $
.
áá$ %
Message
áá% ,
)
áá, -
;
áá- .
}
àà 
return
ââ 
false
ââ 
;
ââ 
}
ää 	
public
åå 
bool
åå 

BulkUpdate
åå 
(
åå 
IEnumerable
åå *
<
åå* +
T
åå+ ,
>
åå, -
items
åå. 3
)
åå3 4
{
çç 	
try
éé 
{
èè 
_connection
êê 
.
êê 

BulkUpdate
êê &
(
êê& '
items
êê' ,
)
êê, -
;
êê- .
return
ëë 
true
ëë 
;
ëë 
}
íí 
catch
ìì 
(
ìì 
	Exception
ìì 
ex
ìì 
)
ìì  
{
îî 
Console
ïï 
.
ïï 
	WriteLine
ïï !
(
ïï! "
ex
ïï" $
.
ïï$ %
Message
ïï% ,
)
ïï, -
;
ïï- .
}
ññ 
return
óó 
false
óó 
;
óó 
}
òò 	
public
öö 
bool
öö 

BulkDelete
öö 
(
öö 
IEnumerable
öö *
<
öö* +
T
öö+ ,
>
öö, -
items
öö. 3
)
öö3 4
{
õõ 	
try
úú 
{
ùù 
_connection
ûû 
.
ûû 

BulkDelete
ûû &
(
ûû& '
items
ûû' ,
)
ûû, -
;
ûû- .
return
üü 
true
üü 
;
üü 
}
†† 
catch
°° 
(
°° 
	Exception
°° 
ex
°° 
)
°°  
{
¢¢ 
Console
££ 
.
££ 
	WriteLine
££ !
(
££! "
ex
££" $
.
££$ %
Message
££% ,
)
££, -
;
££- .
}
§§ 
return
•• 
false
•• 
;
•• 
}
¶¶ 	
public
®® 

MethodInfo
®® 
GetMethodName
®® '
(
®®' (
)
®®( )
{
©© 	
var
™™ 
trace
™™ 
=
™™ 
new
™™ 

StackTrace
™™ &
(
™™& '
)
™™' (
;
™™( )
return
´´ 
(
´´ 

MethodInfo
´´ 
)
´´ 
trace
´´ $
.
´´$ %
GetFrame
´´% -
(
´´- .
$num
´´. /
)
´´/ 0
.
´´0 1
	GetMethod
´´1 :
(
´´: ;
)
´´; <
;
´´< =
}
¨¨ 	
public
ÆÆ 
DynamicParameters
ÆÆ  
CreateParams
ÆÆ! -
(
ÆÆ- .

MethodInfo
ÆÆ. 8
_Method
ÆÆ9 @
,
ÆÆ@ A
params
ÆÆB H
object
ÆÆI O
[
ÆÆO P
]
ÆÆP Q
_Values
ÆÆR Y
)
ÆÆY Z
{
ØØ 	
DynamicParameters
∞∞ 
	sqlParams
∞∞ '
=
∞∞( )
new
∞∞* -
DynamicParameters
∞∞. ?
(
∞∞? @
)
∞∞@ A
;
∞∞A B
int
±± 

paramIndex
±± 
=
±± 
$num
±± 
;
±± 
ParameterInfo
≤≤ 
[
≤≤ 
]
≤≤ 
methodParameters
≤≤ ,
=
≤≤- .
_Method
≤≤/ 6
.
≤≤6 7
GetParameters
≤≤7 D
(
≤≤D E
)
≤≤E F
;
≤≤F G
foreach
≥≥ 
(
≥≥ 
ParameterInfo
≥≥ "
	paramInfo
≥≥# ,
in
≥≥- /
methodParameters
≥≥0 @
)
≥≥@ A
{
¥¥ 
	sqlParams
µµ 
.
µµ 
Add
µµ 
(
µµ 
	paramInfo
µµ '
.
µµ' (
Name
µµ( ,
,
µµ, -
_Values
µµ. 5
[
µµ5 6

paramIndex
µµ6 @
]
µµ@ A
)
µµA B
;
µµB C

paramIndex
∂∂ 
++
∂∂ 
;
∂∂ 
}
∑∑ 
return
∏∏ 
	sqlParams
∏∏ 
;
∏∏ 
}
ππ 	
}
∫∫ 
}ªª ∫
eC:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\Contexts\Dapper\IDbContext.cs
	namespace 	
Core
 
. 
Contexts 
. 
Dapper 
{		 
public

 

	interface

 

IDbContext

 
<

  
T

  !
>

! "
where

# (
T

) *
:

+ ,

BaseEntity

- 7
,

7 8
new

9 <
(

< =
)

= >
{ 
long 
Insert 
( 
T 
item 
) 
; 
T 	
GetById
 
( 
long 
id 
) 
; 
IEnumerable 
< 
T 
> 
GetAll 
( 
) 
;  
bool"" 
Update"" 
("" 
T"" 
item"" 
)"" 
;"" 
bool(( 
Delete(( 
((( 
T(( 
item(( 
)(( 
;(( 
bool.. 

BulkInsert.. 
(.. 
IEnumerable.. #
<..# $
T..$ %
>..% &
items..' ,
).., -
;..- .
bool44 

BulkUpdate44 
(44 
IEnumerable44 #
<44# $
T44$ %
>44% &
items44' ,
)44, -
;44- .
bool:: 

BulkDelete:: 
(:: 
IEnumerable:: #
<::# $
T::$ %
>::% &
items::' ,
)::, -
;::- .
IEnumerableAA 
<AA 
TAA 
>AA 
ExecuteCommandAA %
(AA% &
stringAA& ,
sqlAA- 0
,AA0 1
paramsAA2 8
objectAA9 ?
[AA? @
]AA@ A
argsAAB F
)AAF G
;AAG H
IEnumerableGG 
<GG 
TGG 
>GG 
ExecuteCommandGG %
(GG% &
stringGG& ,
sqlGG- 0
)GG0 1
;GG1 2
}HH 
}II ì#
C:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\CrossCuttingCorners\Caching\RedisCache\IRedisService.cs
	namespace 	
Core
 
. 
CrossCuttingCorners "
." #
Cache# (
.( )
Redis) .
{		 
public

 

	interface

 
IRedisService

 "
{ !
ConnectionMultiplexer $
GetConnectionMultiplexer 6
(6 7
)7 8
;8 9
	IDatabase 
GetDatabase 
( 
int !
id" $
=% &
$num' (
)( )
;) *
Task 
< 
string 
> 
Get 
( 
string 
key  #
,# $
int% (
db) +
=, -
$num. /
)/ 0
;0 1
Task%% 
<%% 
T%% 
>%% 
Get%% 
<%% 
T%% 
>%% 
(%% 
string%% 
key%% !
,%%! "
int%%# &
db%%' )
=%%* +
$num%%, -
)%%- .
;%%. /
Task.. 
<.. 
bool.. 
>.. 
Set.. 
(.. 
string.. 
key.. !
,..! "
string..# )
value..* /
,../ 0
DateTime..1 9
?..9 :

expireDate..; E
,..E F
int..G J
db..K M
=..N O
$num..P Q
)..Q R
;..R S
Task88 
<88 
bool88 
>88 
Set88 
<88 
T88 
>88 
(88 
string88  
key88! $
,88$ %
T88& '
value88( -
,88- .
DateTime88/ 7
?887 8

expireDate889 C
,88C D
int88E H
db88I K
=88L M
$num88N O
)88O P
;88P Q
Task?? 
<?? 
bool?? 
>?? 
	RemoveKey?? 
(?? 
string?? #
key??$ '
,??' (
int??) ,
db??- /
=??0 1
$num??2 3
)??3 4
;??4 5
TaskFF 
<FF 
longFF 
>FF 
	HashCountFF 
(FF 
stringFF #
keyFF$ '
,FF' (
intFF) ,
dbFF- /
=FF0 1
$numFF2 3
)FF3 4
;FF4 5
TaskOO 
<OO 
boolOO 
>OO 
SetHashOO 
(OO 
stringOO !
hashKeyOO" )
,OO) *
stringOO+ 1
keyOO2 5
,OO5 6
stringOO7 =
valueOO> C
,OOC D
intOOE H
dbOOI K
=OOL M
$numOON O
)OOO P
;OOP Q
TaskXX 
<XX 
boolXX 
>XX 
SetHashXX 
(XX 
stringXX !
hashKeyXX" )
,XX) *
stringXX+ 1
keyXX2 5
,XX5 6
objectXX7 =
valueXX> C
,XXC D
intXXE H
dbXXI K
=XXL M
$numXXN O
)XXO P
;XXP Q
Task`` 
<`` 
bool`` 
>`` 

DeleteHash`` 
(`` 
string`` $
hashKey``% ,
,``, -
string``. 4
key``5 8
,``8 9
int``: =
db``> @
=``A B
$num``C D
)``D E
;``E F
Taskgg 
<gg 
	HashEntrygg 
[gg 
]gg 
>gg 
GetHashgg !
(gg! "
stringgg" (
hashKeygg) 0
,gg0 1
intgg2 5
dbgg6 8
=gg9 :
$numgg; <
)gg< =
;gg= >
Taskpp 
<pp 
Tpp 
>pp 
GetHashpp 
<pp 
Tpp 
>pp 
(pp 
stringpp !
hashKeypp" )
,pp) *
stringpp+ 1
keypp2 5
,pp5 6
intpp7 :
dbpp; =
=pp> ?
$numpp@ A
)ppA B
;ppB C
Taskxx 
<xx 
stringxx 
>xx 
GetHashStringxx "
(xx" #
stringxx# )
hashKeyxx* 1
,xx1 2
stringxx3 9
keyxx: =
,xx= >
intxx? B
dbxxC E
=xxF G
$numxxH I
)xxI J
;xxJ K
}yy 
}zz ôç
~C:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\CrossCuttingCorners\Caching\RedisCache\RedisService.cs
	namespace 	
Core
 
. 
CrossCuttingCorners "
." #
Cache# (
.( )
Redis) .
{ 
public 

class 
RedisService 
: 
IRedisService  -
{ 
private 
readonly !
ConnectionMultiplexer .
_redis/ 5
;5 6
public 
RedisService 
( 
) 
{ 	
_redis 
= 
ConnectionHelper %
.% &
RedisConnection& 5
(5 6
)6 7
;7 8
} 	
public !
ConnectionMultiplexer $$
GetConnectionMultiplexer% =
(= >
)> ?
{ 	
return 
_redis 
; 
} 	
public"" 
async"" 
Task"" 
<"" 
bool"" 
>"" 

DeleteHash""  *
(""* +
string""+ 1
hashKey""2 9
,""9 :
string""; A
key""B E
,""E F
int""G J
db""K M
=""N O
$num""P Q
)""Q R
{## 	
bool$$ 
rtn$$ 
=$$ 
true$$ 
;$$ 
try%% 
{&& 
	IDatabase'' 
rdb'' 
='' 
GetDatabase''  +
(''+ ,
db'', .
)''. /
;''/ 0
await(( 
rdb(( 
.(( 
HashDeleteAsync(( )
((() *
hashKey((* 1
,((1 2
key((3 6
)((6 7
;((7 8
})) 
catch** 
(** 
	Exception** 
ex** 
)**  
{++ 
Console,, 
.,, 
	WriteLine,, !
(,,! "
ex,," $
.,,$ %
Message,,% ,
),,, -
;,,- .
rtn-- 
=-- 
false-- 
;-- 
}.. 
return// 
rtn// 
;// 
}00 	
public88 
async88 
Task88 
<88 
string88  
>88  !
Get88" %
(88% &
string88& ,
key88- 0
,880 1
int882 5
db886 8
=889 :
$num88; <
)88< =
{99 	
string:: 
rtn:: 
=:: 
$str:: 
;:: 
try;; 
{<< 
	IDatabase== 
rdb== 
=== 
GetDatabase==  +
(==+ ,
db==, .
)==. /
;==/ 0
rtn>> 
=>> 
await>> 
rdb>> 
.>>  
StringGetAsync>>  .
(>>. /
key>>/ 2
)>>2 3
;>>3 4
}?? 
catch@@ 
(@@ 
	Exception@@ 
ex@@ 
)@@  
{AA 
ConsoleBB 
.BB 
	WriteLineBB !
(BB! "
exBB" $
.BB$ %
MessageBB% ,
)BB, -
;BB- .
}CC 
returnDD 
rtnDD 
;DD 
}EE 	
publicNN 
asyncNN 
TaskNN 
<NN 
TNN 
>NN 
GetNN  
<NN  !
TNN! "
>NN" #
(NN# $
stringNN$ *
keyNN+ .
,NN. /
intNN0 3
dbNN4 6
=NN7 8
$numNN9 :
)NN: ;
{OO 	
TPP 
rtnPP 
=PP 
defaultPP 
;PP 
tryQQ 
{RR 
	IDatabaseSS 
rdbSS 
=SS 
GetDatabaseSS  +
(SS+ ,
dbSS, .
)SS. /
;SS/ 0
stringTT 
valueTT 
=TT 
awaitTT $
rdbTT% (
.TT( )
StringGetAsyncTT) 7
(TT7 8
keyTT8 ;
)TT; <
;TT< =
ifVV 
(VV 
!VV 
StringVV 
.VV 
IsNullOrEmptyVV )
(VV) *
valueVV* /
)VV/ 0
)VV0 1
{WW 
rtnXX 
=XX 
JsonConvertXX %
.XX% &
DeserializeObjectXX& 7
<XX7 8
TXX8 9
>XX9 :
(XX: ;
valueXX; @
)XX@ A
;XXA B
}YY 
}ZZ 
catch[[ 
([[ 
	Exception[[ 
ex[[ 
)[[  
{\\ 
Console]] 
.]] 
	WriteLine]] !
(]]! "
ex]]" $
.]]$ %
Message]]% ,
)]], -
;]]- .
}^^ 
return__ 
rtn__ 
;__ 
}`` 	
publicgg 
	IDatabasegg 
GetDatabasegg $
(gg$ %
intgg% (
idgg) +
=gg, -
$numgg. /
)gg/ 0
{hh 	
	IDatabaseii 
rtnii 
=ii 
nullii  
;ii  !
tryjj 
{kk 
rtnll 
=ll 
_redisll 
.ll 
GetDatabasell (
(ll( )
idll) +
)ll+ ,
;ll, -
}mm 
catchnn 
(nn 
	Exceptionnn 
exnn 
)nn  
{oo 
Consolepp 
.pp 
	WriteLinepp !
(pp! "
expp" $
.pp$ %
Messagepp% ,
)pp, -
;pp- .
}qq 
returnrr 
rtnrr 
;rr 
}ss 	
public{{ 
async{{ 
Task{{ 
<{{ 
	HashEntry{{ #
[{{# $
]{{$ %
>{{% &
GetHash{{' .
({{. /
string{{/ 5
hashKey{{6 =
,{{= >
int{{? B
db{{C E
={{F G
$num{{H I
){{I J
{|| 	
	HashEntry}} 
[}} 
]}} 
rtn}} 
=}} 
null}} "
;}}" #
try~~ 
{ 
	IDatabase
ÄÄ 
rdb
ÄÄ 
=
ÄÄ 
GetDatabase
ÄÄ  +
(
ÄÄ+ ,
db
ÄÄ, .
)
ÄÄ. /
;
ÄÄ/ 0
rtn
ÅÅ 
=
ÅÅ 
await
ÅÅ 
rdb
ÅÅ 
.
ÅÅ  
HashGetAllAsync
ÅÅ  /
(
ÅÅ/ 0
hashKey
ÅÅ0 7
)
ÅÅ7 8
;
ÅÅ8 9
}
ÇÇ 
catch
ÉÉ 
(
ÉÉ 
	Exception
ÉÉ 
ex
ÉÉ 
)
ÉÉ  
{
ÑÑ 
Console
ÖÖ 
.
ÖÖ 
	WriteLine
ÖÖ !
(
ÖÖ! "
ex
ÖÖ" $
.
ÖÖ$ %
Message
ÖÖ% ,
)
ÖÖ, -
;
ÖÖ- .
}
ÜÜ 
return
áá 
rtn
áá 
;
áá 
}
àà 	
public
íí 
async
íí 
Task
íí 
<
íí 
T
íí 
>
íí 
GetHash
íí $
<
íí$ %
T
íí% &
>
íí& '
(
íí' (
string
íí( .
hashKey
íí/ 6
,
íí6 7
string
íí8 >
key
íí? B
,
ííB C
int
ííD G
db
ííH J
=
ííK L
$num
ííM N
)
ííN O
{
ìì 	
T
îî 
result
îî 
=
îî 
(
îî 
T
îî 
)
îî 
	Activator
îî #
.
îî# $
CreateInstance
îî$ 2
(
îî2 3
typeof
îî3 9
(
îî9 :
T
îî: ;
)
îî; <
)
îî< =
;
îî= >
try
ïï 
{
ññ 
	IDatabase
óó 
rdb
óó 
=
óó 
GetDatabase
óó  +
(
óó+ ,
db
óó, .
)
óó. /
;
óó/ 0
string
òò 
json
òò 
=
òò 
await
òò #
rdb
òò$ '
.
òò' (
HashGetAsync
òò( 4
(
òò4 5
hashKey
òò5 <
,
òò< =
key
òò> A
)
òòA B
;
òòB C
if
ôô 
(
ôô 
!
ôô 
String
ôô 
.
ôô 
IsNullOrEmpty
ôô )
(
ôô) *
json
ôô* .
)
ôô. /
)
ôô/ 0
result
öö 
=
öö 
JsonConvert
öö (
.
öö( )
DeserializeObject
öö) :
<
öö: ;
T
öö; <
>
öö< =
(
öö= >
json
öö> B
)
ööB C
;
ööC D
}
õõ 
catch
úú 
(
úú 
	Exception
úú 
ex
úú 
)
úú  
{
ùù 
Console
ûû 
.
ûû 
	WriteLine
ûû !
(
ûû! "
ex
ûû" $
.
ûû$ %
Message
ûû% ,
)
ûû, -
;
ûû- .
}
üü 
return
†† 
result
†† 
;
†† 
}
°° 	
public
™™ 
async
™™ 
Task
™™ 
<
™™ 
string
™™  
>
™™  !
GetHashString
™™" /
(
™™/ 0
string
™™0 6
hashKey
™™7 >
,
™™> ?
string
™™@ F
key
™™G J
,
™™J K
int
™™L O
db
™™P R
=
™™S T
$num
™™U V
)
™™V W
{
´´ 	
string
¨¨ 
result
¨¨ 
=
¨¨ 
null
¨¨  
;
¨¨  !
try
≠≠ 
{
ÆÆ 
	IDatabase
ØØ 
rdb
ØØ 
=
ØØ 
GetDatabase
ØØ  +
(
ØØ+ ,
db
ØØ, .
)
ØØ. /
;
ØØ/ 0
result
∞∞ 
=
∞∞ 
await
∞∞ 
rdb
∞∞ "
.
∞∞" #
HashGetAsync
∞∞# /
(
∞∞/ 0
hashKey
∞∞0 7
,
∞∞7 8
key
∞∞9 <
)
∞∞< =
;
∞∞= >
}
±± 
catch
≤≤ 
(
≤≤ 
	Exception
≤≤ 
ex
≤≤ 
)
≤≤  
{
≥≥ 
Console
¥¥ 
.
¥¥ 
	WriteLine
¥¥ !
(
¥¥! "
ex
¥¥" $
.
¥¥$ %
Message
¥¥% ,
)
¥¥, -
;
¥¥- .
}
µµ 
return
∂∂ 
result
∂∂ 
;
∂∂ 
}
∑∑ 	
public
øø 
async
øø 
Task
øø 
<
øø 
long
øø 
>
øø 
	HashCount
øø  )
(
øø) *
string
øø* 0
key
øø1 4
,
øø4 5
int
øø6 9
db
øø: <
=
øø= >
$num
øø? @
)
øø@ A
{
¿¿ 	
long
¡¡ 
rtn
¡¡ 
=
¡¡ 
$num
¡¡ 
;
¡¡ 
try
¬¬ 
{
√√ 
	IDatabase
ƒƒ 
rdb
ƒƒ 
=
ƒƒ 
GetDatabase
ƒƒ  +
(
ƒƒ+ ,
db
ƒƒ, .
)
ƒƒ. /
;
ƒƒ/ 0
rtn
≈≈ 
=
≈≈ 
await
≈≈ 
rdb
≈≈ 
.
≈≈  
HashLengthAsync
≈≈  /
(
≈≈/ 0
key
≈≈0 3
)
≈≈3 4
;
≈≈4 5
}
∆∆ 
catch
«« 
(
«« 
	Exception
«« 
ex
«« 
)
««  
{
»» 
Console
…… 
.
…… 
	WriteLine
…… !
(
……! "
ex
……" $
.
……$ %
Message
……% ,
)
……, -
;
……- .
}
   
return
ÀÀ 
rtn
ÀÀ 
;
ÀÀ 
}
ÃÃ 	
public
‘‘ 
async
‘‘ 
Task
‘‘ 
<
‘‘ 
bool
‘‘ 
>
‘‘ 
	RemoveKey
‘‘  )
(
‘‘) *
string
‘‘* 0
key
‘‘1 4
,
‘‘4 5
int
‘‘6 9
db
‘‘: <
=
‘‘= >
$num
‘‘? @
)
‘‘@ A
{
’’ 	
bool
÷÷ 
rtn
÷÷ 
=
÷÷ 
true
÷÷ 
;
÷÷ 
try
◊◊ 
{
ÿÿ 
	IDatabase
ŸŸ 
rdb
ŸŸ 
=
ŸŸ 
GetDatabase
ŸŸ  +
(
ŸŸ+ ,
db
ŸŸ, .
)
ŸŸ. /
;
ŸŸ/ 0
await
⁄⁄ 
rdb
⁄⁄ 
.
⁄⁄ 
KeyDeleteAsync
⁄⁄ (
(
⁄⁄( )
key
⁄⁄) ,
)
⁄⁄, -
;
⁄⁄- .
}
€€ 
catch
‹‹ 
(
‹‹ 
	Exception
‹‹ 
ex
‹‹ 
)
‹‹  
{
›› 
Console
ﬁﬁ 
.
ﬁﬁ 
	WriteLine
ﬁﬁ !
(
ﬁﬁ! "
ex
ﬁﬁ" $
.
ﬁﬁ$ %
Message
ﬁﬁ% ,
)
ﬁﬁ, -
;
ﬁﬁ- .
rtn
ﬂﬂ 
=
ﬂﬂ 
false
ﬂﬂ 
;
ﬂﬂ 
}
‡‡ 
return
·· 
rtn
·· 
;
·· 
}
‚‚ 	
public
ÏÏ 
async
ÏÏ 
Task
ÏÏ 
<
ÏÏ 
bool
ÏÏ 
>
ÏÏ 
Set
ÏÏ  #
(
ÏÏ# $
string
ÏÏ$ *
key
ÏÏ+ .
,
ÏÏ. /
string
ÏÏ0 6
value
ÏÏ7 <
,
ÏÏ< =
DateTime
ÏÏ> F
?
ÏÏF G

expireDate
ÏÏH R
,
ÏÏR S
int
ÏÏT W
db
ÏÏX Z
=
ÏÏ[ \
$num
ÏÏ] ^
)
ÏÏ^ _
{
ÌÌ 	
bool
ÓÓ 
rtn
ÓÓ 
=
ÓÓ 
true
ÓÓ 
;
ÓÓ 
try
ÔÔ 
{
 
	IDatabase
ÒÒ 
rdb
ÒÒ 
=
ÒÒ 
GetDatabase
ÒÒ  +
(
ÒÒ+ ,
db
ÒÒ, .
)
ÒÒ. /
;
ÒÒ/ 0
if
ÚÚ 
(
ÚÚ 

expireDate
ÚÚ 
!=
ÚÚ !
null
ÚÚ" &
)
ÚÚ& '
{
ÛÛ 
var
ÙÙ 
expiryTimeSpan
ÙÙ &
=
ÙÙ' (

expireDate
ÙÙ) 3
.
ÙÙ3 4
Value
ÙÙ4 9
.
ÙÙ9 :
Subtract
ÙÙ: B
(
ÙÙB C
DateTime
ÙÙC K
.
ÙÙK L
UtcNow
ÙÙL R
)
ÙÙR S
;
ÙÙS T
await
ıı 
rdb
ıı 
.
ıı 
StringSetAsync
ıı ,
(
ıı, -
key
ıı- 0
,
ıı0 1
value
ıı2 7
,
ıı7 8
expiryTimeSpan
ıı9 G
)
ııG H
;
ııH I
}
ˆˆ 
else
˜˜ 
{
¯¯ 
await
˘˘ 
rdb
˘˘ 
.
˘˘ 
StringSetAsync
˘˘ ,
(
˘˘, -
key
˘˘- 0
,
˘˘0 1
value
˘˘2 7
)
˘˘7 8
;
˘˘8 9
}
˙˙ 
}
˚˚ 
catch
¸¸ 
(
¸¸ 
	Exception
¸¸ 
ex
¸¸ 
)
¸¸  
{
˝˝ 
Console
˛˛ 
.
˛˛ 
	WriteLine
˛˛ !
(
˛˛! "
ex
˛˛" $
.
˛˛$ %
Message
˛˛% ,
)
˛˛, -
;
˛˛- .
rtn
ˇˇ 
=
ˇˇ 
false
ˇˇ 
;
ˇˇ 
}
ÄÄ 
return
ÅÅ 
rtn
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
public
çç 
async
çç 
Task
çç 
<
çç 
bool
çç 
>
çç 
Set
çç  #
<
çç# $
T
çç$ %
>
çç% &
(
çç& '
string
çç' -
key
çç. 1
,
çç1 2
T
çç3 4
value
çç5 :
,
çç: ;
DateTime
çç< D
?
ççD E

expireDate
ççF P
,
ççP Q
int
ççR U
db
ççV X
=
ççY Z
$num
çç[ \
)
çç\ ]
{
éé 	
string
èè 
serializeValue
èè !
=
èè" #
JsonConvert
èè$ /
.
èè/ 0
SerializeObject
èè0 ?
(
èè? @
value
èè@ E
)
èèE F
;
èèF G
return
êê 
await
êê 
Set
êê 
(
êê 
key
êê  
,
êê  !
serializeValue
êê" 0
,
êê0 1

expireDate
êê2 <
,
êê< =
db
êê> @
)
êê@ A
;
êêA B
}
ëë 	
public
õõ 
async
õõ 
Task
õõ 
<
õõ 
bool
õõ 
>
õõ 
SetHash
õõ  '
(
õõ' (
string
õõ( .
hashKey
õõ/ 6
,
õõ6 7
string
õõ8 >
key
õõ? B
,
õõB C
string
õõD J
value
õõK P
,
õõP Q
int
õõR U
db
õõV X
=
õõY Z
$num
õõ[ \
)
õõ\ ]
{
úú 	
bool
ùù 
rtn
ùù 
=
ùù 
true
ùù 
;
ùù 
try
ûû 
{
üü 
	IDatabase
†† 
rdb
†† 
=
†† 
GetDatabase
††  +
(
††+ ,
db
††, .
)
††. /
;
††/ 0
await
°° 
rdb
°° 
.
°° 
HashSetAsync
°° &
(
°°& '
hashKey
°°' .
,
°°. /
key
°°0 3
,
°°3 4
value
°°5 :
)
°°: ;
;
°°; <
}
¢¢ 
catch
££ 
(
££ 
	Exception
££ 
ex
££ 
)
££  
{
§§ 
Console
•• 
.
•• 
	WriteLine
•• !
(
••! "
ex
••" $
.
••$ %
Message
••% ,
)
••, -
;
••- .
rtn
¶¶ 
=
¶¶ 
false
¶¶ 
;
¶¶ 
}
ßß 
return
®® 
rtn
®® 
;
®® 
}
©© 	
public
≥≥ 
async
≥≥ 
Task
≥≥ 
<
≥≥ 
bool
≥≥ 
>
≥≥ 
SetHash
≥≥  '
(
≥≥' (
string
≥≥( .
hashKey
≥≥/ 6
,
≥≥6 7
string
≥≥8 >
key
≥≥? B
,
≥≥B C
object
≥≥D J
value
≥≥K P
,
≥≥P Q
int
≥≥R U
db
≥≥V X
=
≥≥Y Z
$num
≥≥[ \
)
≥≥\ ]
{
¥¥ 	
return
µµ 
await
µµ 
SetHash
µµ  
(
µµ  !
hashKey
µµ! (
,
µµ( )
key
µµ* -
,
µµ- .
JsonConvert
µµ/ :
.
µµ: ;
SerializeObject
µµ; J
(
µµJ K
value
µµK P
)
µµP Q
,
µµQ R
db
µµS U
)
µµU V
;
µµV W
}
∂∂ 	
}
∑∑ 
}∏∏ ƒ
}C:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\CrossCuttingCorners\FileServer\MinIO\IMinioService.cs
	namespace 	
Core
 
. 
CrossCuttingCorners "
." #

FileServer# -
{		 
public

 

	interface

 
IMinioService

 "
{ 
Task 
< 
bool 
> 

UploadFile 
( 
	IFormFile '
formFile( 0
,0 1
string2 8

bucketName9 C
,C D
stringE K
fileNameL T
)T U
;U V
Task 
< 
bool 
> 

DeleteFile 
( 
string $

bucketName% /
,/ 0
string1 7
fileName8 @
)@ A
;A B
Task   
<   
bool   
>   
ExistsBucket   
(    
string    &

bucketName  ' 1
)  1 2
;  2 3
}!! 
}"" ü%
|C:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\CrossCuttingCorners\FileServer\MinIO\MinioService.cs
	namespace 	
Core
 
. 
CrossCuttingCorners "
." #

FileServer# -
{ 
public 

class 
MinioService 
: 
IMinioService  -
{ 
private 
readonly 
MinioClient $
_minioClient% 1
;1 2
public 
MinioService 
( 
) 
{ 	
_minioClient 
= 
ConnectionHelper +
.+ ,
MinioConnection, ;
(; <
)< =
;= >
} 	
public 
async 
Task 
< 
bool 
> 

UploadFile  *
(* +
	IFormFile+ 4
formFile5 =
,= >
string? E

bucketNameF P
,P Q
stringR X
fileNameY a
)a b
{ 	
bool 
response 
= 
true  
;  !
try   
{!! 
bool"" 
bucketFound""  
=""! "
await""# (
_minioClient"") 5
.""5 6
BucketExistsAsync""6 G
(""G H

bucketName""H R
)""R S
;""S T
if$$ 
($$ 
!$$ 
bucketFound$$  
)$$  !
{%% 
_minioClient&&  
.&&  !
MakeBucketAsync&&! 0
(&&0 1

bucketName&&1 ;
,&&; <
$str&&= D
)&&D E
.&&E F
Wait&&F J
(&&J K
)&&K L
;&&L M
}'' 
using(( 
((( 
Stream(( 
stream(( $
=((% &
formFile((' /
.((/ 0
OpenReadStream((0 >
(((> ?
)((? @
)((@ A
{)) 
await** 
_minioClient** &
.**& '
PutObjectAsync**' 5
(**5 6

bucketName**6 @
,**@ A
fileName**B J
,**J K
stream**L R
,**R S
stream**T Z
.**Z [
Length**[ a
)**a b
;**b c
}++ 
},, 
catch-- 
(-- 
	Exception-- 
ex-- 
)--  
{.. 
Console// 
.// 
	WriteLine// !
(//! "
ex//" $
.//$ %
Message//% ,
)//, -
;//- .
response00 
=00 
false00  
;00  !
}11 
return22 
response22 
;22 
}33 	
public;; 
async;; 
Task;; 
<;; 
bool;; 
>;; 

DeleteFile;;  *
(;;* +
string;;+ 1

bucketName;;2 <
,;;< =
string;;> D
fileName;;E M
);;M N
{<< 	
bool== 
response== 
=== 
true==  
;==  !
try>> 
{?? 
await@@ 
_minioClient@@ "
.@@" #
RemoveObjectAsync@@# 4
(@@4 5

bucketName@@5 ?
,@@? @
fileName@@A I
)@@I J
;@@J K
}AA 
catchBB 
(BB 
	ExceptionBB 
exBB 
)BB  
{CC 
ConsoleDD 
.DD 
	WriteLineDD !
(DD! "
exDD" $
.DD$ %
MessageDD% ,
)DD, -
;DD- .
responseEE 
=EE 
falseEE  
;EE  !
}FF 
returnHH 
responseHH 
;HH 
}II 	
publicPP 
asyncPP 
TaskPP 
<PP 
boolPP 
>PP 
ExistsBucketPP  ,
(PP, -
stringPP- 3

bucketNamePP4 >
)PP> ?
{QQ 	
boolRR 
responseRR 
=RR 
trueRR  
;RR  !
trySS 
{TT 
responseUU 
=UU 
awaitUU  
_minioClientUU! -
.UU- .
BucketExistsAsyncUU. ?
(UU? @

bucketNameUU@ J
)UUJ K
;UUK L
}VV 
catchWW 
(WW 
	ExceptionWW 
exWW 
)WW  
{XX 
ConsoleYY 
.YY 
	WriteLineYY !
(YY! "
exYY" $
.YY$ %
MessageYY% ,
)YY, -
;YY- .
responseZZ 
=ZZ 
falseZZ  
;ZZ  !
}[[ 
return]] 
response]] 
;]] 
}^^ 	
}__ 
}`` ’
~C:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\CrossCuttingCorners\Queue\RabbitMq\IRabbitMqService.cs
	namespace 	
Core
 
. 
CrossCuttingCorners "
." #
Queue# (
.( )
RabbitMq) 1
{ 
public		 

	interface		 
IRabbitMqService		 %
{

 
bool 
	Publisher 
( 
string 
	queueName '
,' (
string) /
body0 4
)4 5
;5 6
bool 
Consumer 
( 
string 
	queueName &
)& '
;' (
} 
} ô(
}C:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\CrossCuttingCorners\Queue\RabbitMq\RabbitMqService.cs
	namespace 	
Core
 
. 
CrossCuttingCorners "
." #
Queue# (
.( )
RabbitMq) 1
{ 
public 

class 
RabbitMqService  
:! "
IRabbitMqService# 3
{ 
private 
readonly 
IConnection $
_context% -
;- .
public 
RabbitMqService 
( 
)  
{ 	
_context 
= 
ConnectionHelper '
.' (
RabbitMqConnection( :
(: ;
); <
;< =
} 	
public 
bool 
	Publisher 
( 
string $
	queueName% .
,. /
string0 6
body7 ;
); <
{ 	
bool 
response 
= 
false !
;! "
try 
{   
using!! 
(!! 
var!! 
channel!! "
=!!# $
_context!!% -
.!!- .
CreateModel!!. 9
(!!9 :
)!!: ;
)!!; <
{"" 
channel## 
.## 
QueueDeclare## (
(##( )
queue##) .
:##. /
	queueName##0 9
,##9 :
durable$$( /
:$$/ 0
false$$1 6
,$$6 7
	exclusive%%( 1
:%%1 2
false%%3 8
,%%8 9

autoDelete&&( 2
:&&2 3
false&&4 9
,&&9 :
	arguments''( 1
:''1 2
null''3 7
)''7 8
;''8 9
var)) 
arr)) 
=)) 
Encoding)) &
.))& '
UTF8))' +
.))+ ,
GetBytes)), 4
())4 5
body))5 9
)))9 :
;)): ;
channel** 
.** 
BasicPublish** (
(**( )
$str**) +
,**+ ,
	queueName**- 6
,**6 7
null**8 <
,**< =
arr**> A
)**A B
;**B C
response++ 
=++ 
true++ #
;++# $
},, 
}-- 
catch.. 
(.. 
	Exception.. 
ex.. 
)..  
{// 
Console00 
.00 
	WriteLine00 !
(00! "
ex00" $
.00$ %
Message00% ,
)00, -
;00- .
}11 
return22 
response22 
;22 
}33 	
public:: 
bool:: 
Consumer:: 
(:: 
string:: #
	queueName::$ -
)::- .
{;; 	
bool<< 
response<< 
=<< 
false<< !
;<<! "
try== 
{>> 
using?? 
(?? 
var?? 
channel?? "
=??# $
_context??% -
.??- .
CreateModel??. 9
(??9 :
)??: ;
)??; <
{@@ 
channelAA 
.AA 
QueueDeclareAA (
(AA( )
queueAA) .
:AA. /
	queueNameAA0 9
,AA9 :
durableBB( /
:BB/ 0
falseBB1 6
,BB6 7
	exclusiveCC( 1
:CC1 2
falseCC3 8
,CC8 9

autoDeleteDD( 2
:DD2 3
falseDD4 9
,DD9 :
	argumentsEE( 1
:EE1 2
nullEE3 7
)EE7 8
;EE8 9
varGG 
consumerGG  
=GG! "
newGG# &!
EventingBasicConsumerGG' <
(GG< =
channelGG= D
)GGD E
;GGE F
consumerHH 
.HH 
ReceivedHH %
+=HH& (
(HH) *
modelHH* /
,HH/ 0
eaHH1 3
)HH3 4
=>HH5 7
{II 
varJJ 
bodyJJ  
=JJ! "
eaJJ# %
.JJ% &
BodyJJ& *
.JJ* +
ToArrayJJ+ 2
(JJ2 3
)JJ3 4
;JJ4 5
varKK 
messageKK #
=KK$ %
EncodingKK& .
.KK. /
UTF8KK/ 3
.KK3 4
	GetStringKK4 =
(KK= >
bodyKK> B
)KKB C
;KKC D
}LL 
;LL 
channelMM 
.MM 
BasicConsumeMM (
(MM( )
queueMM) .
:MM. /
	queueNameMM0 9
,MM9 :
autoAckMM; B
:MMB C
trueMMD H
,MMH I
consumerMMJ R
:MMR S
consumerMMT \
)MM\ ]
;MM] ^
responseNN 
=NN 
trueNN #
;NN# $
}OO 
}PP 
catchQQ 
(QQ 
	ExceptionQQ 
exQQ 
)QQ  
{RR 
ConsoleSS 
.SS 
	WriteLineSS !
(SS! "
exSS" $
.SS$ %
MessageSS% ,
)SS, -
;SS- .
}TT 
returnUU 
responseUU 
;UU 
}VV 	
}WW 
}XX œ

âC:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\CrossCuttingCorners\Validation\FluentValidation\ValidationTool.cs
	namespace 	
Core
 
. 
Validations 
. 
FluentValidation +
{ 
public 

static 
class 
ValidationTool &
{		 
public

 
static

 
void

 
Validate

 #
(

# $

IValidator

$ .
	validator

/ 8
,

8 9
object

: @
entity

A G
)

G H
{ 	
var 
context 
= 
new 
ValidationContext /
</ 0
object0 6
>6 7
(7 8
entity8 >
)> ?
;? @
var 
result 
= 
	validator "
." #
Validate# +
(+ ,
context, 3
)3 4
;4 5
if 
( 
! 
result 
. 
IsValid 
)  
{ 
throw 
new 
ValidationException -
(- .
result. 4
.4 5
Errors5 ;
); <
;< =
} 
} 	
} 
} 
iC:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\DependencyResolvers\CoreModule.cs
	namespace 	
Core
 
. 
DependencyResolvers "
{ 
public 

class 

CoreModule 
: 
ICoreModule )
{ 
public 
void 
Load 
( 
IServiceCollection +
serviceCollection, =
)= >
{ 	
serviceCollection 
. 
AddMemoryCache ,
(, -
)- .
;. /
serviceCollection 
. 
AddSingleton *
<* + 
IHttpContextAccessor+ ?
,? @
HttpContextAccessorA T
>T U
(U V
)V W
;W X
} 	
} 
} ¿
gC:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\Entities\Concrete\BaseEntity.cs
	namespace 	
Core
 
. 
Entities 
{		 
public

 

abstract

 
class

 

BaseEntity

 $
{ 
[ 	
Key	 
] 
public 
long 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
DateTime 
CreationDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
StatusId 
{ 
get !
;! "
set# &
;& '
}( )
} 
} å
aC:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\Entities\Concrete\User.cs
	namespace 	
Entities
 
. 
Models 
{ 
[		 
Table		 

(		
 
$str		 
)		 
]		 
public

 

class

 
User

 
:

 

BaseEntity

 "
{ 
public 
int 
UserRole 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
	FirstName 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
Surname 
{ 
get  #
;# $
set% (
;( )
}* +
public 
byte 
[ 
] 
PasswordSalt "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
byte 
[ 
] 
PasswordHash "
{# $
get% (
;( )
set* -
;- .
}/ 0
} 
} È
[C:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\Enums\EnumStatus.cs
	namespace 	
Business
 
. 
Enums 
{ 
public 

enum 

EnumStatus 
{		 
[

 	
Description

	 
(

 
$str

 
)

  
]

  !
Inactive 
= 
$num 
, 
[ 	
Description	 
( 
$str 
) 
] 
Active 
= 
$num 
} 
} Á
]C:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\Enums\EnumUserRole.cs
	namespace 	
Core
 
. 
Enums 
{		 
public

 

enum

 
EnumUserRole

 
{ 
[ 	
Description	 
( 
$str 
)  
]  !
Default 
= 
$num 
, 
[ 	
Description	 
( 
$str 
) 
] 
Admin 
= 
$num 
} 
} Ö
eC:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\Extensions\ClaimExtensions.cs
	namespace		 	
Core		
 
.		 

Extensions		 
{

 
public 

static 
class 
ClaimExtensions '
{ 
public 
static 
void 
AddEmail #
(# $
this$ (
ICollection) 4
<4 5
Claim5 :
>: ;
claims< B
,B C
stringD J
emailK P
)P Q
{ 	
claims 
. 
Add 
( 
new 
Claim  
(  !#
JwtRegisteredClaimNames! 8
.8 9
Email9 >
,> ?
email@ E
)E F
)F G
;G H
} 	
public 
static 
void 
AddName "
(" #
this# '
ICollection( 3
<3 4
Claim4 9
>9 :
claims; A
,A B
stringC I
nameJ N
)N O
{ 	
claims 
. 
Add 
( 
new 
Claim  
(  !

ClaimTypes! +
.+ ,
Name, 0
,0 1
name2 6
)6 7
)7 8
;8 9
} 	
public 
static 
void 
AddNameIdentifier ,
(, -
this- 1
ICollection2 =
<= >
Claim> C
>C D
claimsE K
,K L
stringM S
nameIdentifierT b
)b c
{ 	
claims 
. 
Add 
( 
new 
Claim  
(  !

ClaimTypes! +
.+ ,
NameIdentifier, :
,: ;
nameIdentifier< J
)J K
)K L
;L M
} 	
} 
} ë
sC:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\Extensions\ExceptionMiddlewareExtensions.cs
	namespace 	
Core
 
. 

Extensions 
{ 
public		 

static		 
class		 )
ExceptionMiddlewareExtensions		 5
{

 
public 
static 
IApplicationBuilder )"
UseExceptionMiddleware* @
(@ A
thisA E
IApplicationBuilderF Y
builderZ a
)a b
{ 	
return 
builder 
. 
UseMiddleware (
<( )
ExceptionMiddleware) <
>< =
(= >
)> ?
;? @
} 	
} 
} ∞
iC:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\Extensions\RateLimitExtensions.cs
	namespace 	
Core
 
. 

Extensions 
{ 
public 

static 
class "
RateLimitingExtensions .
{ 
public 
static 
void 
AddRateLimiting *
(* +
this+ /
IServiceCollection0 B
servicesC K
)K L
{ 	
services 
. 

AddOptions 
(  
)  !
;! "
services 
. 
AddMemoryCache #
(# $
)$ %
;% &
services 
. 
	Configure 
< 
IpRateLimitOptions 1
>1 2
(2 3
EnvironmentManager3 E
.E F
InstanceF N
.N O
GetConfigurationO _
(_ `
)` a
.a b

GetSectionb l
(l m
$strm }
)} ~
)~ 
;	 Ä
services 
. 
AddSingleton !
<! "
IIpPolicyStore" 0
,0 1$
MemoryCacheIpPolicyStore2 J
>J K
(K L
)L M
;M N
services 
. 
AddSingleton !
<! ""
IRateLimitCounterStore" 8
,8 9,
 MemoryCacheRateLimitCounterStore: Z
>Z [
([ \
)\ ]
;] ^
services 
. 
AddSingleton !
<! "#
IRateLimitConfiguration" 9
,9 :"
RateLimitConfiguration; Q
>Q R
(R S
)S T
;T U
services 
. "
AddHttpContextAccessor +
(+ ,
), -
;- .
} 	
} 
} Í
qC:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\Extensions\ServiceCollectionExtensions.cs
	namespace 	
Core
 
. 

Extensions 
{ 
public		 

static		 
class		 '
ServiceCollectionExtensions		 3
{

 
public 
static 
IServiceCollection ("
AddDependencyResolvers) ?
(? @
this@ D
IServiceCollectionE W
serviceCollectionX i
,i j
ICoreModulej u
[u v
]v w
modulesx 
)	 Ä
{ 	
foreach 
( 
var 
module 
in  "
modules# *
)* +
{ 
module 
. 
Load 
( 
serviceCollection -
)- .
;. /
} 
return 
ServiceTool 
. 
Create %
(% &
serviceCollection& 7
)7 8
;8 9
} 	
} 
} »3
pC:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\Utilities\Connection\ConnectionHelper.cs
	namespace 	
Core
 
. 
	Utilities 
. 

Connection #
{ 
public 

class 
ConnectionHelper !
{ 
private 
IConfiguration 
_configuration -
=. /
null0 4
;4 5
private 
static 
volatile 
ConnectionHelper  0
_connection1 <
== >
null? C
;C D
public 
ConnectionHelper 
(  
)  !
{ 	
EnvironmentManager 
environmentManager 1
=2 3
EnvironmentManager4 F
.F G
InstanceG O
;O P
_configuration 
= 
environmentManager /
./ 0
GetConfiguration0 @
(@ A
)A B
;B C
} 	
public 
static 
ConnectionHelper &
Instance' /
{ 	
get 
{ 
if 
( 
_connection 
==  "
null# '
)' (
_connection   
=    !
new  " %
ConnectionHelper  & 6
(  6 7
)  7 8
;  8 9
return!! 
_connection!! "
;!!" #
}"" 
}## 	
public)) 
static)) 
IDbConnection)) #
MySqlConnection))$ 3
())3 4
)))4 5
{** 	
MySqlConnection++ 
	mysqlConn++ %
=++& '
new++( +
(+++ ,
(++, -
string++- 3
)++3 4
EnvironmentManager++4 F
.++F G
Instance++G O
.++O P
GetConfiguration++P `
(++` a
)++a b
.++b c
GetValue++c k
(++k l
typeof++l r
(++r s
string++s y
)++y z
,++z {
$str	++| à
)
++à â
)
++â ä
;
++ä ã
return,, 
	mysqlConn,, 
;,, 
}-- 	
public33 
static33 
IConnection33 !
RabbitMqConnection33" 4
(334 5
)335 6
{44 	
ConnectionFactory55 
rabbitMqConnection55 0
=551 2
new553 6
(556 7
)557 8
{66 
HostName77 
=77 
(77 
string77 "
)77" #
EnvironmentManager77# 5
.775 6
Instance776 >
.77> ?
GetConfiguration77? O
(77O P
)77P Q
.77Q R
GetValue77R Z
(77Z [
typeof77[ a
(77a b
string77b h
)77h i
,77i j
$str77k y
)77y z
,77z {
Port88 
=88 
(88 
int88 
)88 
EnvironmentManager88 .
.88. /
Instance88/ 7
.887 8
GetConfiguration888 H
(88H I
)88I J
.88J K
GetValue88K S
(88S T
typeof88T Z
(88Z [
int88[ ^
)88^ _
,88_ `
$str88a o
)88o p
,88p q
UserName99 
=99 
(99 
string99 "
)99" #
EnvironmentManager99# 5
.995 6
Instance996 >
.99> ?
GetConfiguration99? O
(99O P
)99P Q
.99Q R
GetValue99R Z
(99Z [
typeof99[ a
(99a b
string99b h
)99h i
,99i j
$str99k }
)99} ~
,99~ 
Password:: 
=:: 
(:: 
string:: "
)::" #
EnvironmentManager::# 5
.::5 6
Instance::6 >
.::> ?
GetConfiguration::? O
(::O P
)::P Q
.::Q R
GetValue::R Z
(::Z [
typeof::[ a
(::a b
string::b h
)::h i
,::i j
$str::k }
)::} ~
};; 
;;; 
return== 
rabbitMqConnection== %
.==% &
CreateConnection==& 6
(==6 7
)==7 8
;==8 9
}>> 	
publicDD 
staticDD !
ConnectionMultiplexerDD +
RedisConnectionDD, ;
(DD; <
)DD< =
{EE 	
stringFF 
	redisConnFF 
=FF 
(FF  
stringFF  &
)FF& '
EnvironmentManagerFF' 9
.FF9 :
InstanceFF: B
.FFB C
GetConfigurationFFC S
(FFS T
)FFT U
.FFU V
GetValueFFV ^
(FF^ _
typeofFF_ e
(FFe f
stringFFf l
)FFl m
,FFm n
$str	FFo Ä
)
FFÄ Å
;
FFÅ Ç
returnGG !
ConnectionMultiplexerGG (
.GG( )
ConnectGG) 0
(GG0 1
	redisConnGG1 :
)GG: ;
;GG; <
}HH 	
publicNN 
staticNN 
MinioClientNN !
MinioConnectionNN" 1
(NN1 2
)NN2 3
{OO 	
MinioClientPP 
minioClientPP #
=PP$ %
newPP& )
(PP) *
(QQ 
stringQQ 
)QQ 
EnvironmentManagerQQ *
.QQ* +
InstanceQQ+ 3
.QQ3 4
GetConfigurationQQ4 D
(QQD E
)QQE F
.QQF G
GetValueQQG O
(QQO P
typeofQQP V
(QQV W
stringQQW ]
)QQ] ^
,QQ^ _
$strQQ` i
)QQi j
,QQj k
(RR 
stringRR 
)RR 
EnvironmentManagerRR *
.RR* +
InstanceRR+ 3
.RR3 4
GetConfigurationRR4 D
(RRD E
)RRE F
.RRF G
GetValueRRG O
(RRO P
typeofRRP V
(RRV W
stringRRW ]
)RR] ^
,RR^ _
$strRR` p
)RRp q
,RRq r
(SS 
stringSS 
)SS 
EnvironmentManagerSS *
.SS* +
InstanceSS+ 3
.SS3 4
GetConfigurationSS4 D
(SSD E
)SSE F
.SSF G
GetValueSSG O
(SSO P
typeofSSP V
(SSV W
stringSSW ]
)SS] ^
,SS^ _
$strSS` p
)SSp q
)TT 
;TT 
returnVV 
minioClientVV 
;VV 
}WW 	
}XX 
}YY ¶$
sC:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\Utilities\Environment\EnvironmentManager.cs
	namespace 	
Core
 
. 
	Utilities 
. 
Environment $
{ 
public 

class 
EnvironmentManager #
{		 
private

 
IConfiguration

 
_configuration

 -
=

. /
null

0 4
;

4 5
private 
static 
volatile 
EnvironmentManager  2
_environmentManager3 F
;F G
private 
static 
object 

lockObject (
=) *
new+ .
object/ 5
(5 6
)6 7
;7 8
private 
string 
_environmentName '
=( )
$str* ,
;, -
private 
readonly 
string #
_environmentVariableKey  7
=8 9
$str: N
;N O
public 
bool 
IsDevelopment !
(! "
)" #
=>$ &
_environmentName' 7
==8 :
$str; H
?I J
trueK O
:P Q
falseR W
;W X
public 
bool 
IsProduction  
(  !
)! "
=># %
_environmentName& 6
==7 9
$str: F
?G H
trueI M
:N O
falseP U
;U V
public 
EnvironmentManager !
(! "
)" #
{ 	
GetEnvironmentName 
( 
)  
;  !
} 	
public 
static 
EnvironmentManager (
Instance) 1
{ 	
get 
{   
lock!! 
(!! 

lockObject!!  
)!!  !
{"" 
if## 
(## 
_environmentManager## +
==##, .
null##/ 3
)##3 4
_environmentManager$$ +
=$$, -
new$$. 1
EnvironmentManager$$2 D
($$D E
)$$E F
;$$F G
return%% 
_environmentManager%% .
;%%. /
}&& 
}'' 
}(( 	
public.. 
string.. 
GetEnvironmentName.. (
(..( )
)..) *
{// 	
if00 
(00 
String00 
.00 
IsNullOrEmpty00 $
(00$ %
_environmentName00% 5
)005 6
)006 7
{11 
try22 
{33 
_environmentName44 $
=44% &
System44' -
.44- .
Environment44. 9
.449 :"
GetEnvironmentVariable44: P
(44P Q#
_environmentVariableKey44Q h
)44h i
.44i j
ToLower44j q
(44q r
)44r s
;44s t
}55 
catch66 
(66 
	Exception66  
)66  !
{77 
throw88 
new88 !
ArgumentNullException88 3
(883 4
$"884 6
{886 7#
_environmentVariableKey887 N
}88N O
$str88O [
"88[ \
)88\ ]
;88] ^
}99 
}:: 
return;; 
_environmentName;; #
;;;# $
}<< 	
publicBB 
IConfigurationBB 
CreateConfigurationBB 1
(BB1 2
)BB2 3
{CC 	
ifDD 
(DD 
_configurationDD 
==DD !
nullDD" &
)DD& '
{EE 
varFF 
builderFF 
=FF 
newFF ! 
ConfigurationBuilderFF" 6
(FF6 7
)FF7 8
.FF8 9
AddJsonFileFF9 D
(FFD E
$"FFE G
{FFG H
GetEnvironmentNameFFH Z
(FFZ [
)FF[ \
}FF\ ]
$strFF] b
"FFb c
,FFc d
trueFFe i
,FFi j
trueFFk o
)FFo p
;FFp q
_configurationGG 
=GG  
builderGG! (
.GG( )
BuildGG) .
(GG. /
)GG/ 0
;GG0 1
}HH 
returnII 
_configurationII !
;II! "
}JJ 	
publicPP 
IConfigurationPP 
GetConfigurationPP .
(PP. /
)PP/ 0
{QQ 	
returnRR 
_configurationRR !
=RR" #
CreateConfigurationRR$ 7
(RR7 8
)RR8 9
;RR9 :
}SS 	
}TT 
}UU ﬂ
dC:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\Utilities\IoC\ICoreModule.cs
	namespace 	
Core
 
. 
	Utilities 
. 
IoC 
{		 
public

 

	interface

 
ICoreModule

  
{ 
void 
Load 
( 
IServiceCollection $
serviceCollection% 6
)6 7
;7 8
} 
} ‹
dC:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\Utilities\IoC\ServiceTool.cs
	namespace 	
Core
 
. 
	Utilities 
. 
IoC 
{		 
public

 

static

 
class

 
ServiceTool

 #
{ 
public 
static 
IServiceProvider &
ServiceProvider' 6
{7 8
get9 <
;< =
private> E
setF I
;I J
}K L
public 
static 
IServiceCollection (
Create) /
(/ 0
IServiceCollection0 B
servicesC K
)K L
{ 	
ServiceProvider 
= 
services &
.& ' 
BuildServiceProvider' ;
(; <
)< =
;= >
return 
services 
; 
} 	
} 
} « 
sC:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\Utilities\Middleware\ExceptionMiddleware.cs
	namespace 	
Core
 
. 
	Utilities 
. 

Middleware #
{ 
public 

class 
ExceptionMiddleware $
{ 
private 
readonly 
RequestDelegate (
_next) .
;. /
public 
ExceptionMiddleware "
(" #
RequestDelegate# 2
next3 7
)7 8
{ 	
_next 
= 
next 
; 
} 	
public 
async 
Task 
InvokeAsync %
(% &
HttpContext& 1
httpContext2 =
)= >
{ 	
try 
{   
await!! 
_next!! 
(!! 
httpContext!! '
)!!' (
;!!( )
}"" 
catch## 
(## 
	Exception## 
ex## 
)##  
{$$ 
await%%  
HandleExceptionAsync%% *
(%%* +
httpContext%%+ 6
,%%6 7
ex%%8 :
)%%: ;
;%%; <
}&& 
}'' 	
private)) 
static)) 
Task))  
HandleExceptionAsync)) 0
())0 1
HttpContext))1 <
httpContext))= H
,))H I
	Exception))I R
ex))S U
)))U V
{** 	
httpContext++ 
.++ 
Response++  
.++  !
ContentType++! ,
=++- .
$str++/ A
;++A B
httpContext,, 
.,, 
Response,,  
.,,  !

StatusCode,,! +
=,,, -
(,,. /
int,,/ 2
),,2 3
HttpStatusCode,,3 A
.,,A B
InternalServerError,,B U
;,,U V
if.. 
(.. 
ex.. 
... 
GetType.. 
(.. 
).. 
==.. 
typeof.. %
(..% &
ValidationException..& 9
)..9 :
)..: ;
{// 
httpContext00 
.00 
Response00 $
.00$ %

StatusCode00% /
=000 1
(002 3
int003 6
)006 7
HttpStatusCode007 E
.00E F

BadRequest00F P
;00P Q
return22 
httpContext22 "
.22" #
Response22# +
.22+ ,

WriteAsync22, 6
(226 7
JsonConvert227 B
.22B C
SerializeObject22C R
(22R S
new22S V!
ValidationErrorDetail22W l
(22l m
)22m n
{33 
Errors44 
=44 
(44 
(44 
ValidationException44 2
)442 3
ex443 5
)445 6
.446 7
Errors447 =
.44= >
Select44> D
(44D E
x44E F
=>44G I
x44J K
.44K L
ErrorMessage44L X
)44X Y
.44Y Z
ToList44Z `
(44` a
)44a b
,44b c
Success55 
=55 
false55 #
,55# $

StatusCode66 
=66  
(66! "
int66" %
)66% &
HttpStatusCode66& 4
.664 5

BadRequest665 ?
}77 
)77 
)77 
;77 
}88 
return:: 
httpContext:: 
.:: 
Response:: '
.::' (

WriteAsync::( 2
(::2 3
JsonConvert::3 >
.::> ?
SerializeObject::? N
(::N O
new::O R
ErrorDetail::S ^
(::^ _
)::_ `
{;; 
Message<< 
=<< 
ex<< 
.<< 
Message<< $
,<<$ %
Success== 
=== 
false== 
,==  

StatusCode>> 
=>> 
httpContext>> (
.>>( )
Response>>) 1
.>>1 2

StatusCode>>2 <
}?? 
)?? 
)?? 
;?? 
}@@ 	
}AA 
}BB “
rC:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\Utilities\Middleware\Models\ErrorDetail.cs
	namespace 	
Core
 
. 
	Utilities 
. 

Middleware #
.# $
Models$ *
{ 
public		 

class		 
ErrorDetail		 
{

 
public 
string 
Message 
{ 
get  #
;# $
set% (
;( )
}* +
public 
bool 
Success 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 

StatusCode 
{ 
get  #
;# $
set% (
;( )
}* +
} 
} ï
|C:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\Utilities\Middleware\Models\ValidationErrorDetail.cs
	namespace 	
Core
 
. 
	Utilities 
. 

Middleware #
.# $
Models$ *
{ 
public		 

class		 !
ValidationErrorDetail		 &
{

 
public 
List 
< 
string 
> 
Errors "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
bool 
Success 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 

StatusCode 
{ 
get  #
;# $
set% (
;( )
}* +
} 
} È

gC:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\Utilities\Results\DataResult.cs
	namespace 	
Core
 
. 
Results 
{ 
public 

class 

DataResult 
< 
T 
> 
:  
Result! '
,' (
IDataResult) 4
<4 5
T5 6
>6 7
{ 
public		 
T		 
Data		 
{		 
get		 
;		 
set		  
;		  !
}		" #
public 

DataResult 
( 
T 
data  
,  !
bool" &
success' .
,. /
string0 6
message7 >
)> ?
:@ A
baseB F
(F G
successG N
,N O
messageP W
)W X
{ 	
Data 
= 
data 
; 
} 	
public 

DataResult 
( 
T 
data  
,  !
bool" &
success' .
). /
:0 1
base2 6
(6 7
success7 >
)> ?
{ 	
Data 
= 
data 
; 
} 	
} 
} ß
lC:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\Utilities\Results\ErrorDataResult.cs
	namespace 	
Core
 
. 
Results 
{ 
public 

class 
ErrorDataResult  
<  !
T! "
>" #
:$ %

DataResult& 0
<0 1
T1 2
>2 3
{ 
public		 
ErrorDataResult		 
(		 
T		  
data		! %
,		% &
string		' -
message		. 5
)		5 6
:		7 8
base		9 =
(		= >
data		> B
,		B C
false		D I
,		I J
message		K R
)		R S
{

 	
} 	
public 
ErrorDataResult 
( 
T  
data! %
)% &
:' (
base) -
(- .
data. 2
,2 3
false4 9
)9 :
{ 	
} 	
public 
ErrorDataResult 
( 
string %
message& -
)- .
:/ 0
base1 5
(5 6
default6 =
,= >
false? D
,D E
messageF M
)M N
{ 	
} 	
public 
ErrorDataResult 
( 
)  
:! "
base# '
(' (
default( /
,/ 0
false1 6
)6 7
{ 	
} 	
} 
} ì
hC:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\Utilities\Results\ErrorResult.cs
	namespace 	
Core
 
. 
Results 
{ 
public 

class 
ErrorResult 
: 
Result %
{ 
public		 
ErrorResult		 
(		 
string		 !
message		" )
)		) *
:		+ ,
base		- 1
(		1 2
false		2 7
,		7 8
message		9 @
)		@ A
{

 	
} 	
public 
ErrorResult 
( 
) 
: 
base #
(# $
false$ )
)) *
{ 	
} 	
} 
} ·
hC:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\Utilities\Results\IDataResult.cs
	namespace 	
Core
 
. 
Results 
{ 
public 

	interface 
IDataResult  
<  !
T! "
>" #
:$ %
IResult& -
{ 
T		 	
Data		
 
{		 
get		 
;		 
}		 
}

 
} ı
dC:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\Utilities\Results\IResult.cs
	namespace 	
Core
 
. 
Results 
{ 
public 

	interface 
IResult 
{		 
bool

 
Success

 
{

 
get

 
;

 
}

 
string 
Message 
{ 
get 
; 
} 
} 
} ≠	
cC:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\Utilities\Results\Result.cs
	namespace 	
Core
 
. 
Results 
{ 
public 

class 
Result 
: 
IResult !
{		 
public

 
Result

 
(

 
bool

 
success

 "
,

" #
string

$ *
message

+ 2
)

2 3
:

4 5
this

6 :
(

: ;
success

; B
)

B C
{ 	
Message 
= 
message 
; 
} 	
public 
Result 
( 
bool 
success "
)" #
{ 	
Success 
= 
success 
; 
} 	
public 
bool 
Success 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
Message 
{ 
get  #
;# $
set% (
;( )
}* +
} 
} ö
nC:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\Utilities\Results\SuccessDataResult.cs
	namespace 	
Core
 
. 
Results 
{ 
public 

class 
SuccessDataResult "
<" #
T# $
>$ %
:& '

DataResult( 2
<2 3
T3 4
>4 5
{ 
public		 
SuccessDataResult		  
(		  !
T		! "
data		# '
)		' (
:		) *
base		+ /
(		/ 0
data		0 4
,		4 5
true		6 :
)		: ;
{

 	
} 	
public 
SuccessDataResult  
(  !
T! "
data# '
,' (
string) /
message0 7
)7 8
:9 :
base; ?
(? @
data@ D
,D E
trueF J
,J K
messageL S
)S T
{ 	
} 	
} 
} ô
jC:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\Utilities\Results\SuccessResult.cs
	namespace 	
Core
 
. 
Results 
{ 
public 

class 
SuccessResult 
:  
Result! '
{ 
public		 
SuccessResult		 
(		 
string		 #
message		$ +
)		+ ,
:		- .
base		/ 3
(		3 4
true		4 8
,		8 9
message		: A
)		A B
{

 	
} 	
public 
SuccessResult 
( 
) 
:  
base! %
(% &
true& *
)* +
{ 	
} 	
} 
} ˜
zC:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\Utilities\Security\Encryption\SecurityKeyHelper.cs
	namespace 	
Core
 
. 
	Utilities 
. 
Security !
.! "

Encryption" ,
{		 
public

 

static

 
class

 
SecurityKeyHelper

 )
{ 
public 
static 
SecurityKey !
CreateSecurityKey" 3
(3 4
string4 :
securityKey; F
)F G
{ 	
return 
new  
SymmetricSecurityKey +
(+ ,
Encoding, 4
.4 5
UTF85 9
.9 :
GetBytes: B
(B C
securityKeyC N
)N O
)O P
;P Q
} 	
} 
} ¸
ÅC:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\Utilities\Security\Encryption\SigningCredentialsHelper.cs
	namespace 	
Core
 
. 
	Utilities 
. 
Security !
.! "

Encryption" ,
{		 
public

 

static

 
class

 $
SigningCredentialsHelper

 0
{ 
public 
static 
SigningCredentials ($
CreateSigningCredentials) A
(A B
SecurityKeyB M
securityKeyN Y
)Y Z
{ 	
return 
new 
SigningCredentials )
() *
securityKey* 5
,5 6
SecurityAlgorithms7 I
.I J
HmacSha256SignatureJ ]
)] ^
;^ _
} 	
} 
} ·
sC:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\Utilities\Security\Hashing\HashingHelper.cs
	namespace 	
Core
 
. 
	Utilities 
. 
Security !
.! "
Hashing" )
{ 
public		 

static		 
class		 
HashingHelper		 %
{

 
public 
static 
void 
CreatePasswordHash -
(- .
string. 4
password5 =
,= >
out? B
byteC G
[G H
]H I
passwordHashJ V
,V W
outX [
byte\ `
[` a
]a b
passwordSaltc o
)o p
{ 	
using 
( 
var 
hmac 
= 
new !
System" (
.( )
Security) 1
.1 2
Cryptography2 >
.> ?

HMACSHA512? I
(I J
)J K
)K L
{ 
passwordSalt 
= 
hmac #
.# $
Key$ '
;' (
passwordHash 
= 
hmac #
.# $
ComputeHash$ /
(/ 0
Encoding0 8
.8 9
UTF89 =
.= >
GetBytes> F
(F G
passwordG O
)O P
)P Q
;Q R
} 
} 	
public 
static 
bool 
VerifyPasswordHash -
(- .
string. 4
password5 =
,= >
byte? C
[C D
]D E
passwordHashF R
,R S
byteT X
[X Y
]Y Z
passwordSalt[ g
)g h
{ 	
using 
( 
var 
hmac 
= 
new !
System" (
.( )
Security) 1
.1 2
Cryptography2 >
.> ?

HMACSHA512? I
(I J
passwordSaltJ V
)V W
)W X
{ 
var 
computedHash  
=! "
hmac# '
.' (
ComputeHash( 3
(3 4
Encoding4 <
.< =
UTF8= A
.A B
GetBytesB J
(J K
passwordK S
)S T
)T U
;U V
for 
( 
int 
i 
= 
$num 
; 
i  !
<" #
computedHash$ 0
.0 1
Length1 7
;7 8
i9 :
++: <
)< =
{ 
if 
( 
computedHash $
[$ %
i% &
]& '
!=( *
passwordHash+ 7
[7 8
i8 9
]9 :
): ;
{ 
return 
false $
;$ %
} 
} 
}   
return"" 
true"" 
;"" 
}## 	
}$$ 
}%% ≤
mC:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\Utilities\Security\Jwt\AccessToken.cs
	namespace 	
Core
 
. 
	Utilities 
. 
Security !
.! "
Jwt" %
{ 
public		 

class		 
AccessToken		 
{

 
public 
string 
Token 
{ 
get !
;! "
set# &
;& '
}( )
public 
DateTime 

Expiration "
{# $
get% (
;( )
set* -
;- .
}/ 0
} 
} Ç
nC:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\Utilities\Security\Jwt\ITokenHelper.cs
	namespace 	
Core
 
. 
	Utilities 
. 
Security !
.! "
Jwt" %
{		 
public

 

	interface

 
ITokenHelper

 !
{ 
AccessToken 
CreateToken 
(  
User  $
user% )
)) *
;* +
} 
} ¡(
kC:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\Utilities\Security\Jwt\JwtHelper.cs
	namespace 	
Core
 
. 
	Utilities 
. 
Security !
.! "
Jwt" %
{ 
public 

class 
	JwtHelper 
: 
ITokenHelper )
{ 
private 
readonly 
TokenOptions %
_tokenOptions& 3
;3 4
private 
DateTime "
_accessTokenExpiration /
;/ 0
public 
	JwtHelper 
( 
) 
{ 	
_tokenOptions 
= 
EnvironmentManager .
.. /
Instance/ 7
.7 8
GetConfiguration8 H
(H I
)I J
.J K

GetSectionK U
(U V
$strV d
)d e
.e f
Getf i
<i j
TokenOptionsj v
>v w
(w x
)x y
;y z
} 	
public 
AccessToken 
CreateToken &
(& '
User' +
user, 0
)0 1
{ 	"
_accessTokenExpiration "
=# $
DateTime% -
.- .
Now. 1
.1 2
AddHours2 :
(: ;
_tokenOptions; H
.H I!
AccessTokenExpirationI ^
)^ _
;_ `
var 
securityKey 
= 
SecurityKeyHelper /
./ 0
CreateSecurityKey0 A
(A B
_tokenOptionsB O
.O P
SecurityKeyP [
)[ \
;\ ]
var 
signingCredentials "
=# $$
SigningCredentialsHelper% =
.= >$
CreateSigningCredentials> V
(V W
securityKeyW b
)b c
;c d
var 
jwt 
= "
CreateJwtSecurityToken ,
(, -
_tokenOptions- :
,: ;
user< @
,@ A
signingCredentialsB T
)T U
;U V
var #
jwtSecurityTokenHandler '
=( )
new* -#
JwtSecurityTokenHandler. E
(E F
)F G
;G H
var   
token   
=   #
jwtSecurityTokenHandler   /
.  / 0

WriteToken  0 :
(  : ;
jwt  ; >
)  > ?
;  ? @
return"" 
new"" 
AccessToken"" "
{## 
Token$$ 
=$$ 
token$$ 
,$$ 

Expiration%% 
=%% "
_accessTokenExpiration%% 3
}&& 
;&& 
}(( 	
public** 
JwtSecurityToken** "
CreateJwtSecurityToken**  6
(**6 7
TokenOptions**7 C
tokenOptions**D P
,**P Q
User**R V
user**W [
,**[ \
SigningCredentials++ 
signingCredentials++ 1
)++1 2
{,, 	
var-- 
jwt-- 
=-- 
new-- 
JwtSecurityToken-- *
(--* +
issuer.. 
:.. 
tokenOptions.. $
...$ %
Issuer..% +
,..+ ,
audience// 
:// 
tokenOptions// &
.//& '
Audience//' /
,/// 0
expires00 
:00 "
_accessTokenExpiration00 /
,00/ 0
	notBefore11 
:11 
DateTime11 #
.11# $
Now11$ '
,11' (
claims22 
:22 
	SetClaims22 !
(22! "
user22" &
)22& '
,22' (
signingCredentials33 "
:33" #
signingCredentials33$ 6
)44 
;44 
return55 
jwt55 
;55 
}66 	
private88 
static88 
IEnumerable88 "
<88" #
Claim88# (
>88( )
	SetClaims88* 3
(883 4
User884 8
user889 =
)88= >
{99 	
var:: 
claims:: 
=:: 
new:: 
List:: !
<::! "
Claim::" '
>::' (
(::( )
)::) *
;::* +
claims;; 
.;; 
AddNameIdentifier;; $
(;;$ %
user;;% )
.;;) *
Id;;* ,
.;;, -
ToString;;- 5
(;;5 6
);;6 7
);;7 8
;;;8 9
claims<< 
.<< 
AddEmail<< 
(<< 
user<<  
.<<  !
Email<<! &
)<<& '
;<<' (
claims== 
.== 
AddName== 
(== 
$"== 
{== 
user== "
.==" #
	FirstName==# ,
}==, -
$str==- .
{==. /
user==/ 3
.==3 4
Surname==4 ;
}==; <
"==< =
)=== >
;==> ?
return?? 
claims?? 
;?? 
}@@ 	
}AA 
}BB ˆ
nC:\Users\burak\Desktop\Burak Template\SourceTrreStarterKit\backend\Core\Utilities\Security\Jwt\TokenOptions.cs
	namespace 	
Core
 
. 
	Utilities 
. 
Security !
.! "
Jwt" %
{ 
public		 

class		 
TokenOptions		 
{

 
public 
string 
Audience 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Issuer 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int !
AccessTokenExpiration (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
string 
SecurityKey !
{" #
get$ '
;' (
set) ,
;, -
}. /
} 
} 